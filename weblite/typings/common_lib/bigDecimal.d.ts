declare class BigDecimal {
    constructor(MathContext: any);
    public abs(set?: any): any;
    public add(rhs: any, set?: any): any;
    public compareTo(rhs: any, set?: any): any;
    public divide(rhs: any, scale?: any, set?: any): any;
    public divideInteger(rhs: any, set?: any): any;
    public max(rhs: any, set?: any): any;
    public min(rhs: any, set?: any): any;
    public multiply(rhs: any, set?: any): any;
    public negate(set?: any): any;
    public plus(set?: any): any;
    public pow(rhs: any, set?: any): any;
    public remainder(rhs: any, set?: any): any;
    public subtract(rhs: any, set?: any): any;
    public equals(rhs: any): any;
    public format(...args: any[]): any; // 2 to 6
    public intValueExact(): any;
    public movePointLeft(n: any): any;
    public movePointRight(n: any): any;
    public scale(): any;
    public setScale(scale: any, round?: any): any;
    public signum(): any;
    public toString(): any;
    public intValue(): any;
    public isGreaterThan(other: any): any;
    public isLessThan(other: any): any;
    public isGreaterThanOrEqualTo(other: any): any;
    public isLessThanOrEqualTo(other: any): any;
    public isPositive(): any;
    public isNegative(): any;
    public isZero(): any;
    public isInt(): any;
    public static readonly ZERO: any;
    public static readonly ONE: any;
    public static readonly TEN: any;
    public static readonly ROUND_CEILING: any;
    public static readonly ROUND_DOWN: any;
    public static readonly ROUND_FLOOR: any;
    public static readonly ROUND_HALF_DOWN: any;
    public static readonly ROUND_HALF_EVEN: any;
    public static readonly ROUND_HALF_UP: any;
    public static readonly ROUND_UNNECESSARY: any;
    public static readonly ROUND_UP: any;
}