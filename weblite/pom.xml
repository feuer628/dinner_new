<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>dinner-new</artifactId>
        <groupId>dinner-new</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.bifit.ibank.std</groupId>
    <artifactId>weblite</artifactId>
    <packaging>pom</packaging>

    <name>Module weblite</name>

    <properties>
        <application.version>${project.version}-${maven.build.timestamp}</application.version>
        <!-- Настройки компиляции closure compiler'а -->
        <compile.mode>1</compile.mode>
        <compile.pretty>false</compile.pretty>

        <compiled.dir>${project.build.directory}/compiled</compiled.dir>
        <prepared.dir>${project.build.directory}/prepared</prepared.dir>
        <result.dir>${project.build.directory}/result</result.dir>
        <excludedVue>vue/vue.js</excludedVue>
        <excludedVueClassComponent>vue/vue-class-component.js</excludedVueClassComponent>
    </properties>

    <dependencies>

    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/ts</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <!-- Грузим нужные модули в соответствии с package.json -->
                    <execution>
                        <id>npm-install</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm.cmd</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Компилируем ts в один js-файл -->
                    <execution>
                        <id>npm-start</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm.cmd</executable>
                            <arguments>
                                <argument>start</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Распаковываем скрипты для работы с плагином -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-dependency-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>unpack-plugin</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>unpack</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<artifactItems>-->

                            <!--</artifactItems>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Переносим исходный код библиотек для обработки -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-sources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src</directory>
                                    <excludes>
                                        <exclude>lib/${excludedVue}</exclude>
                                        <exclude>lib/${excludedVueClassComponent}</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Копируем библиотеки -->
                    <execution>
                        <id>copy-lib</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/dependency/np-adapter</directory>
                                    <includes>
                                        <include>np-adapter.js</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/dependency/ibank3core-plugin/orig/ru</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>pluginHelper.js</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Подготавливаем ресурсы для финальной сборки -->
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${result.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.html</include>
                                        <include>**/*.js</include>
                                        <include>**/*.css</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/src/resources</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>fonts/**</include>
                                        <include>img/**</include>
                                        <!-- Ресурсы scss нужны для модуля ibank_design для runtime-компиляции кастомного дизайна -->
                                        <include>scss/**</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Копируем ресурс самого приложения -->
                    <execution>
                        <id>copy-compiled-files</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${result.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${compiled.dir}</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>weblite.js</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Конкатенируем библиотеки в один файл в нужном порядке -->
            <!--<plugin>-->
                <!--<groupId>com.bifit.maven.plugin</groupId>-->
                <!--<artifactId>firmware2web-transformer</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>pack-libs</id>-->
                        <!--<phase>process-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>pack</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<orders>-->
                                <!--<order>common/core-2.5.1.js</order>-->
                                <!--<order>np-adapter.js</order>-->
                                <!--<order>common/bigDecimal.js</order>-->
                                <!--<order>common/require.js</order>-->
                                <!--<order>common/fetch.js</order>-->
                                <!--<order>common/moment.js</order>-->
                                <!--<order>common/qrcode.js</order>-->
                                <!--<order>common/dompurify.js</order>-->
                                <!--<order>common/imask.js</order>-->
                                <!--<order>ioc/typescript-ioc-1.0.2-es5.js</order>-->
                                <!--<order>vue/vue.js</order>-->
                                <!--<order>vue/vue.min.js</order>-->
                                <!--<order>vue/vue-router.js</order>-->
                                <!--<order>vue/vue-class-component.js</order>-->
                                <!--<order>vue/vue-property-decorator.js</order>-->
                                <!--<order>vue/vee-validate.js</order>-->
                                <!--<order>vue/v-calendar.min.js</order>-->
                                <!--<order>pluginHelper.js</order>-->
                            <!--</orders>-->
                            <!--<sourcePath>${project.build.directory}/lib</sourcePath>-->
                            <!--<outputFile>${result.dir}/lib/lib.js</outputFile>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Верификация и минимизация содержимого с помощью closure -->
            <!--<plugin>-->
                <!--<groupId>com.bifit.maven.plugin</groupId>-->
                <!--<artifactId>js-minifier-plugin</artifactId>-->
                <!--<executions>-->
                    <!--&lt;!&ndash; Минифицируем библиотеки &ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>minify_lib</id>-->
                        <!--<phase>prepare-package</phase>-->
                        <!--<goals>-->
                            <!--<goal>minify</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<compileMode>1</compileMode>-->
                            <!--<pretty>false</pretty>-->
                            <!--<encoding>UTF8</encoding>-->
                            <!--<fileSet>-->
                                <!--<directory>${result.dir}/lib</directory>-->
                                <!--<exclude>lib/vue/*.js</exclude>-->
                            <!--</fileSet>-->
                            <!--<outputEncoding>UTF8</outputEncoding>-->
                            <!--<outputFolder>${result.dir}/lib</outputFolder>-->
                        <!--</configuration>-->
                    <!--</execution>-->

                    <!--&lt;!&ndash; Минифицируем файл приложения &ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>minify_app</id>-->
                        <!--<phase>prepare-package</phase>-->
                        <!--<goals>-->
                            <!--<goal>minify</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<compileMode>1</compileMode>-->
                            <!--<pretty>false</pretty>-->
                            <!--<encoding>UTF8</encoding>-->
                            <!--<fileSet>-->
                                <!--<directory>${compiled.dir}</directory>-->
                                <!--<include>weblite.js</include>-->
                            <!--</fileSet>-->
                            <!--<outputEncoding>UTF8</outputEncoding>-->
                            <!--<outputFolder>${result.dir}</outputFolder>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Компилируем стили -->
            <plugin>
                <groupId>nl.geodienstencentrum.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-css</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>update-stylesheets</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <source>
                                        <directory>${project.basedir}/src/resources/scss/src</directory>
                                    </source>
                                    <destination>${result.dir}/css</destination>
                                </resource>
                            </resources>
                            <sassOptions>
                                <style>:compressed</style>
                                <sourcemap>:none</sourcemap>
                            </sassOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Упаковываем в .zip -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--<profiles>-->
        <!--<profile>-->
            <!--<id>dev</id>-->
            <!--<activation>-->
                <!--<activeByDefault>false</activeByDefault>-->
            <!--</activation>-->
            <!--<build>-->
                <!--<plugins>-->
                    <!--<plugin>-->
                        <!--<groupId>com.bifit.maven.plugin</groupId>-->
                        <!--<artifactId>js-minifier-plugin</artifactId>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<id>minify_lib</id>-->
                                <!--<phase>none</phase>-->
                            <!--</execution>-->
                            <!--<execution>-->
                                <!--<id>minify_app</id>-->
                                <!--<phase>none</phase>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->
                <!--</plugins>-->
            <!--</build>-->
            <!--<properties>-->
                <!--<excludedVue>vue/vue.min.js</excludedVue>-->
                <!--<excludedVueClassComponent>vue/vue-class-component.min.js</excludedVueClassComponent>-->
            <!--</properties>-->
        <!--</profile>-->
    <!--</profiles>-->
</project>
